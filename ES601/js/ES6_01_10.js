"use strict";
//开启严格模式
var x = 3.14;
console.log(x); //报错
function fn() {
    //ES5会将函数内部直接使用并未加关键词修饰的变量默认声明称全局变量
    var y = 100;
}
fn();
/*
* 严格模式：
*   "use strict";
*   1.为开发过程中，书写代码，加了一系列的限制，如果一个js文件中开启了严格
*   模式，代码中一些原本不符合规则但是不影响执行结果的代码，会直接报错。（浏览器
*   会尽可能正确的解析我们的代码）
*   2.可以在js文件的最开始位置开启严格模式，也可在某个函数的内部开启严格模式，
*   函数内部的严格模式值作用于这个函数内部的代码。
*   3.ES6规定，当函数的形参中，使用了默认值，rest参数（...），结构赋值，那么这
*   个函数内部就不能开启严格模式，否则就会报错（严格模式和参数的设置冲突）。
* */
const obj = {
    name:'tom',
    arr: [4,5,6],
};

/*报错
function fn(x = 100) {
    "use strict";
}
fn();*/
/*报错
function fn({name}) {
    "use strict";
}
fn(obj);*/
/*
function fn(...val) {
    "use strict";
    console.log(val);
}
fn(3,4,5);*/
